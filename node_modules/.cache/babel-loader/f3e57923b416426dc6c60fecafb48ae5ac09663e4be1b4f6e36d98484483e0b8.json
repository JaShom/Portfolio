{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\Portfolio\\\\myportfolio\\\\src\\\\components\\\\Card.tsx\",\n  _s = $RefreshSig$();\nimport '../assets/styles/HomePage/homeItems.css';\nimport { usePopUpContext } from '../contexts/PopUpContext';\nimport CardPopUp from './CardPopUps/CardPopUp';\nimport CardPopUpVideo from './CardPopUps/CardPopUpVideo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const popUpContext = usePopUpContext();\n  const index = props.projectID;\n  console.log(props.description);\n  const cardInfoForPopUp = [{\n    projectID: 0,\n    projectVideo: 'SIAGPU_Eplainer.mp4',\n    projectDescription: [\"In this project, I worked on enhancing a Swarm Intelligence Alogrithm(SIA) known as Dispersive Fly Optimization(DFO), using both the CPU and GPU of a computer. SIAs are agents/bots in an environment, which constantly communicate with each other in an attempt to find a solution. These algorithms generally mimic behaviours from animals and insects in nature, such as Ant Colony Optimisation, Bee Swarm Optimisation, Cuckoo Search and Particle Swarm Optimisation.\", \"DFO is an algorithm used to solve complex problems. Its an algorithm inspired by the swarming of flies, hovering over a food source. To my knowledge, there hasn't been an attempt to modify DFO to leverage CPU Multi-Processing and GPU programming.\", \"\", \"\"]\n  }, {\n    projectID: 1,\n    projectVideo: '',\n    projectDescription: []\n  }, {\n    projectID: 2,\n    projectVideo: '',\n    projectDescription: []\n  }, {\n    projectID: 3,\n    projectVideo: '',\n    projectDescription: []\n  }, {\n    projectID: 4,\n    projectVideo: '',\n    projectDescription: []\n  }];\n  const cardClicked = projectVideo => {\n    var _popUpContext$showPop;\n    console.log(props.title);\n    if (projectVideo.length > 0) {\n      var _popUpContext$setDisp;\n      (_popUpContext$setDisp = popUpContext.setDisplayComponent) === null || _popUpContext$setDisp === void 0 ? void 0 : _popUpContext$setDisp.call(popUpContext, /*#__PURE__*/_jsxDEV(CardPopUpVideo, {\n        projectTitle: props.title,\n        projectVideo: projectVideo,\n        projectDescription: cardInfoForPopUp[index].projectDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this));\n    } else {\n      var _popUpContext$setDisp2;\n      (_popUpContext$setDisp2 = popUpContext.setDisplayComponent) === null || _popUpContext$setDisp2 === void 0 ? void 0 : _popUpContext$setDisp2.call(popUpContext, /*#__PURE__*/_jsxDEV(CardPopUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this));\n    }\n    (_popUpContext$showPop = popUpContext.showPopUp) === null || _popUpContext$showPop === void 0 ? void 0 : _popUpContext$showPop.call(popUpContext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => cardClicked(cardInfoForPopUp[props.projectID].projectVideo),\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filledBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cardDescription\",\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clickMore\",\n      children: \"Click Card For More Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"fsTu46wg+Ch2A6vAYPAuzNTDlug=\", false, function () {\n  return [usePopUpContext];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["usePopUpContext","CardPopUp","CardPopUpVideo","jsxDEV","_jsxDEV","Card","props","_s","popUpContext","index","projectID","console","log","description","cardInfoForPopUp","projectVideo","projectDescription","cardClicked","_popUpContext$showPop","title","length","_popUpContext$setDisp","setDisplayComponent","call","projectTitle","fileName","_jsxFileName","lineNumber","columnNumber","_popUpContext$setDisp2","showPopUp","className","onClick","children","_c","$RefreshReg$"],"sources":["D:/github/Portfolio/myportfolio/src/components/Card.tsx"],"sourcesContent":["import '../assets/styles/HomePage/homeItems.css'\r\nimport { usePopUpContext } from '../contexts/PopUpContext'\r\nimport CardPopUp from './CardPopUps/CardPopUp'\r\nimport CardPopUpVideo from './CardPopUps/CardPopUpVideo'\r\ninterface iCardDetailsProps {\r\n    projectID: number,\r\n    title: string,\r\n    description: string\r\n}\r\n\r\nfunction Card(props: iCardDetailsProps): JSX.Element {\r\n\r\n    const popUpContext = usePopUpContext()\r\n\r\n    const index = props.projectID\r\n\r\n    console.log(props.description)\r\n\r\n    const cardInfoForPopUp = [\r\n        {\r\n            projectID: 0,\r\n            projectVideo: 'SIAGPU_Eplainer.mp4',\r\n            projectDescription: [\r\n                \"In this project, I worked on enhancing a Swarm Intelligence Alogrithm(SIA) known as Dispersive Fly Optimization(DFO), using both the CPU and GPU of a computer. SIAs are agents/bots in an environment, which constantly communicate with each other in an attempt to find a solution. These algorithms generally mimic behaviours from animals and insects in nature, such as Ant Colony Optimisation, Bee Swarm Optimisation, Cuckoo Search and Particle Swarm Optimisation.\",\r\n                \"DFO is an algorithm used to solve complex problems. Its an algorithm inspired by the swarming of flies, hovering over a food source. To my knowledge, there hasn't been an attempt to modify DFO to leverage CPU Multi-Processing and GPU programming.\",\r\n                \"\",\r\n                \"\"\r\n            ]\r\n        },\r\n        {\r\n            projectID: 1,\r\n            projectVideo: '',\r\n            projectDescription: []\r\n        },\r\n        {\r\n            projectID: 2,\r\n            projectVideo: '',\r\n            projectDescription: []\r\n        },\r\n        {\r\n            projectID: 3,\r\n            projectVideo: '',\r\n            projectDescription: []\r\n        },\r\n        {\r\n            projectID: 4,\r\n            projectVideo: '',\r\n            projectDescription: []\r\n        },\r\n    ]\r\n\r\n    const cardClicked = (projectVideo:string) => {\r\n        console.log(props.title)\r\n        if(projectVideo.length > 0) {\r\n            popUpContext.setDisplayComponent?.(\r\n                <CardPopUpVideo projectTitle={props.title} projectVideo={projectVideo} projectDescription={cardInfoForPopUp[index].projectDescription}/>\r\n            )\r\n        }\r\n        else {\r\n            popUpContext.setDisplayComponent?.(\r\n                <CardPopUp/>\r\n            )\r\n        }\r\n        popUpContext.showPopUp?.()\r\n    }\r\n    return (\r\n        <div className=\"card\" onClick={() => cardClicked(cardInfoForPopUp[props.projectID].projectVideo)}>\r\n            <h3 className=\"title\">{props.title}</h3>\r\n\r\n            <div className=\"bar\">\r\n                <div className=\"emptyBar\"></div>\r\n                <div className=\"filledBar\"></div>\r\n            </div>\r\n\r\n            {/* <div className=\"circle\">\r\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <circle className=\"stroke\" cx=\"60\" cy=\"60\" r=\"50\"/>\r\n                    </svg>\r\n                </div> */}\r\n\r\n            <p className=\"cardDescription\">\r\n                {props.description}\r\n            </p>\r\n\r\n            <p className=\"clickMore\">Click Card For More Info</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}